name: GitHub Pages

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read

# Allow one concurrent deployment
concurrency:
  group: "${{ github.repository }}-pages"
  cancel-in-progress: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}

jobs:
  build_pages:
    if: ${{ github.run_number != 1 }}
    runs-on: ubuntu-latest
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/docs/Gemfile
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0 # need full history to get page last modified times
      - name: Setup Ruby
        uses: ruby/setup-ruby@9669f3ee51dc3f4eda8447ab696b3ab19a90d14b # v1.144.0
        with:
          ruby-version: '3.1'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@7110e9e03ffb4a421945e5d0607007b8e9f1f52b # v3.0.5
      - name: Build with Jekyll
        # Outputs to the './docs/_site' directory by default
        run: (cd docs && bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}")
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@253fd476ed429e83b7aae64a92a75b4ceb1a17cf # v1.0.7
        with:
          path: "docs/_site/"

  # Deployment job
  deploy_pages:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    needs: build_pages

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@e690f03220f8a0e2d4da521d8b3a50e0b52650e0 # v1.2.6
      - name: Ping Google Search
        run: curl "https://www.google.com/ping?sitemap=https://www.creekservice.org/${{ github.event.repository.name }}/sitemap.xml"